@startuml RoboDog-２つの整数の足し算シーケンス図
hide footbox
skinparam boundaryBackgroundColor #D5E8D4
skinparam controlBackgroundColor  #F8CECC
skinparam entityBackgroundColor   #DAE8FC

actor ユーザー as A
boundary "RoboDog_menu.htm" as B1
boundary "AddNumbersData.htm" as B2
boundary 計算結果画面 as B3
control "AddNumbers.jsp" as C1
control 足し算処理 as C2
entity "Robodog.java" as E

A -> B1: 「２つの整数の足し算」を選択()
activate B1

B1 -> B2: 表示()
deactivate B1
activate B2

A -> B2: ２つの整数を入力()

B2 -> C1: ２つの整数を登録()
activate C1
' setValues()としてまとめるのもよい
C1 -> E: setFirstValue()
activate E
C1 -> E: setSecondValue()

E --> C1: 保存完了()
deactivate E

C1 -> C2: 足し算処理を行う()
deactivate C1
activate C2
' 自分ならgetAddresult()にする
C2 -> E: getAddition()
activate E
E --> C2: 登録完了()
deactivate E

C2 -> B3: 表示()
deactivate C2
deactivate B2
activate B3

' @enduml

' シーケンス図
 
' startuml RoboDog-２つの整数の足し算シーケンス図
' hide footbox
' skinparam boundaryBackgroundColor #D5E8D4
' skinparam controlBackgroundColor  #F8CECC
' skinparam entityBackgroundColor   #DAE8FC
 
' actor ユーザー as A
' boundary "Robodog_menu.htm" as B1
' boundary "AddNumbersData.htm" as B2
' boundary 計算結果画面 as B3
' control "AddNumbers.jsp" as C1
' control 足し算処理 as C2
' entity "Robodog.java" as E
 
' A -> B1: 「２つの整数の足し算」を選択()
' activate B1
 
' B1 -> B2: 表示()
' deactivate B1
' activate B2
 
' A -> B2: ２つの整数を入力()
 
' B2 -> C1: ２つの整数を登録()
' activate C1
' C1 -> E: setTwoValues()
' activate E
' E --> C1: 保存完了
' deactivate E
 
' C1 -> C2: 足し算処理を行う()
' deactivate C1
' activate C2
' C2 -> E: setAndGetResult()
' activate E
' E --> C2: 登録完了
' deactivate E
 
' C2 -> B3: 表示()
' deactivate C2
' deactivate B2
' activate B3
 
' @enduml
 
' クラス図
 
' @startuml Robodogクラス図
' skinparam classAttributeIconSize 0
' hide circle
 
' class RoboDog {
' -名前
' -時刻
' -朝の挨拶
' -昼の挨拶
' -夜の挨拶
' -1つ目の整数
' -2つ目の整数
' -足し算の結果
 
' +getMyName()
' +setMyName()
' +setNewTime()
' +getMyGreeting()
' +setTwoValues()
' +setAndGetResult()
' }
 
' @enduml
 
 